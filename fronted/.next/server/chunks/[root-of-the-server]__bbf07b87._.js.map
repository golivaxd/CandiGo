{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Goliva/Desktop/CandiGo/fronted/src/app/api/news/route.ts"],"sourcesContent":["// app/api/news/route.ts\r\nimport { NextResponse } from \"next/server\";\r\n\r\nexport async function GET() {\r\n  try {\r\n    const provider = process.env.NEWS_PROVIDER || \"newsdata\"; // Opciones: newsdata | newscatcher | newsapi\r\n\r\n    if (provider === \"newscatcher\") {\r\n      const token = process.env.NEWSCATCHER_API_TOKEN;\r\n      if (!token)\r\n        return NextResponse.json({ error: \"NEWSCATCHER_API_TOKEN no definido\" }, { status: 500 });\r\n\r\n      const body = {\r\n        lang: \"es\",\r\n        countries: [\"MX\"],\r\n        is_opinion: false,\r\n        page_size: 10,\r\n        theme: [\"politics\"]\r\n      };\r\n\r\n      const headers: Record<string, string> = {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-api-token\": token\r\n      };\r\n\r\n      const r = await fetch(\"https://v3-api.newscatcherapi.com/api/latest_headlines\", {\r\n        method: \"POST\",\r\n        headers,\r\n        body: JSON.stringify(body)\r\n      });\r\n\r\n      if (!r.ok) {\r\n        const text = await r.text();\r\n        console.error(`Error ${provider} API:`, r.status, text);\r\n        return NextResponse.json({ error: `Error ${provider} API: ${r.status} - ${text}` }, { status: r.status });\r\n      }\r\n\r\n      const json = await r.json();\r\n      const articles = json.articles || json.data || [];\r\n      return NextResponse.json({ source: \"newscatcher\", articles });\r\n    }\r\n\r\n    if (provider === \"newsapi\") {\r\n  const apiKey = process.env.NEWSAPI_API_KEY || \"5b9d0f9ed9e54d38b9c17154b8dced1a\";\r\n\r\n  const url = `https://newsapi.org/v2/everything?q=elecciones+MÃ©xico+2024&language=es&sortBy=publishedAt&apiKey=${apiKey}`;\r\n\r\n  const r = await fetch(url);\r\n  if (!r.ok) {\r\n    const text = await r.text();\r\n    console.error(`Error ${provider} API:`, r.status, text);\r\n    return NextResponse.json({ error: `Error ${provider} API: ${r.status} - ${text}` }, { status: r.status });\r\n  }\r\n\r\n  const json = await r.json();\r\n  const articles = json.articles || [];\r\n  return NextResponse.json({ source: \"newsapi\", articles });\r\n}\r\n\r\n\r\n    if (provider === \"newsapi\") {\r\n      const apiKey = process.env.NEWSAPI_API_KEY;\r\n      if (!apiKey)\r\n        return NextResponse.json({ error: \"NEWSAPI_API_KEY no definido\" }, { status: 500 });\r\n\r\n      const url = `https://newsapi.org/v2/top-headlines?country=mx&category=politics&apiKey=${apiKey}`;\r\n      const r = await fetch(url);\r\n\r\n      if (!r.ok) {\r\n        const text = await r.text();\r\n        console.error(`Error ${provider} API:`, r.status, text);\r\n        return NextResponse.json({ error: `Error ${provider} API: ${r.status} - ${text}` }, { status: r.status });\r\n      }\r\n\r\n      const json = await r.json();\r\n      const articles = json.articles || [];\r\n      return NextResponse.json({ source: \"newsapi\", articles });\r\n    }\r\n\r\n    // Si el provider no es ninguno de los anteriores\r\n    return NextResponse.json({ error: \"provider no configurado\" }, { status: 400 });\r\n  } catch (err: any) {\r\n    console.error(\"API /api/news error:\", err);\r\n    return NextResponse.json({ error: \"internal\", details: String(err) }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}