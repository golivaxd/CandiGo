{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Goliva/Desktop/CandiGo/fronted/src/lib/supabaseClient.ts"],"sourcesContent":["// src/lib/supabaseClient.ts\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { useEffect } from 'react';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\r\n\r\nif (!supabaseUrl || !supabaseKey) {\r\n  throw new Error('supabaseUrl and supabaseKey are required.');\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\nexport function useAuth(onAuth: (session: any) => void) {\r\n  useEffect(() => {\r\n    const { data } = supabase.auth.onAuthStateChange(\r\n      async (event, session) => {\r\n        if (event === 'SIGNED_IN') {\r\n          onAuth(session);\r\n        } else if (event === 'SIGNED_OUT') {\r\n          onAuth(null);\r\n        }\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      data?.subscription?.unsubscribe();\r\n    };\r\n  }, [onAuth]);\r\n}\r\n\r\nconst handleSignUp = async (e: React.FormEvent, email: string, password: string) => {\r\n  e.preventDefault();\r\n  try {\r\n    const { data, error } = await supabase.auth.signUp({\r\n      email,\r\n      password,\r\n    });\r\n    if (error) {\r\n      console.error('Error al registrarse:', error);\r\n    } else {\r\n      console.log('Registro exitoso:', data);\r\n    }\r\n  } catch (err) {\r\n    console.error('Error inesperado:', err);\r\n  }\r\n};"],"names":[],"mappings":"AAAA,4BAA4B;;;;;AAC5B;AACA;;;AAEA,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAE3C,SAAS,QAAQ,MAA8B;IACpD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,EAAE,IAAI,EAAE,GAAG,SAAS,IAAI,CAAC,iBAAiB,CAC9C,OAAO,OAAO;YACZ,IAAI,UAAU,aAAa;gBACzB,OAAO;YACT,OAAO,IAAI,UAAU,cAAc;gBACjC,OAAO;YACT;QACF;QAGF,OAAO;YACL,MAAM,cAAc;QACtB;IACF,GAAG;QAAC;KAAO;AACb;AAEA,MAAM,eAAe,OAAO,GAAoB,OAAe;IAC7D,EAAE,cAAc;IAChB,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,MAAM,CAAC;YACjD;YACA;QACF;QACA,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,yBAAyB;QACzC,OAAO;YACL,QAAQ,GAAG,CAAC,qBAAqB;QACnC;IACF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,qBAAqB;IACrC;AACF","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Goliva/Desktop/CandiGo/fronted/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\r\nimport { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { supabase } from '@/lib/supabaseClient';\r\nimport type { User } from '@supabase/supabase-js';\r\nimport './CSS/d.css';\r\n\r\nexport default function Dashboard() {\r\n  const router = useRouter();\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);  // nuevo estado\r\n\r\n  useEffect(() => {\r\n    const checkSession = async () => {\r\n      const { data: { session } } = await supabase.auth.getSession();\r\n      if (!session) {\r\n        router.push('/login');  // Mejor que '/' si usas login separado\r\n      } else {\r\n        setUser(session.user);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    checkSession();\r\n  }, [router]);\r\n\r\n  if (loading) {\r\n    return <p>Cargando...</p>;  // O spinner, mientras valida sesión\r\n  }\r\n\r\n  if (!user) {\r\n    return null; // Por seguridad, no renderizar dashboard sin usuario\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      {/* Sidebar */}\r\n      <aside className=\"sidebar\">\r\n        <img\r\n          src={user.user_metadata?.avatar_url || 'https://via.placeholder.com/80'}\r\n          alt=\"Foto de perfil\"\r\n          className=\"profile-img\"\r\n        />\r\n        <h2 className=\"username\">{user.user_metadata?.full_name || 'Usuario'}</h2>\r\n\r\n        <nav className=\"nav-menu\">\r\n          <button className=\"nav-btn\">Opción 1</button>\r\n          <button className=\"nav-btn\">Opción 2</button>\r\n          <button className=\"nav-btn\">Opción 3</button>\r\n          <button className=\"nav-btn\">Opción 4</button>\r\n          <button className=\"nav-btn\">Opción 5</button>\r\n        </nav>\r\n\r\n        <button\r\n          onClick={async () => {\r\n            await supabase.auth.signOut();\r\n            router.push('https://candigo.vercel.app/');\r\n          }}\r\n          className=\"logout-btn\"\r\n        >\r\n          Cerrar sesión\r\n        </button>\r\n      </aside>\r\n\r\n      {/* Contenido principal */}\r\n      <main className=\"main-content\">\r\n        <h1>Bienvenido al Dashboard</h1>\r\n        <p>¡Has iniciado sesión correctamente!</p>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;;AAOe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,OAAQ,eAAe;IAE9D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG,MAAM,4HAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,UAAU;YAC5D,IAAI,CAAC,SAAS;gBACZ,OAAO,IAAI,CAAC,WAAY,uCAAuC;YACjE,OAAO;gBACL,QAAQ,QAAQ,IAAI;YACtB;YACA,WAAW;QACb;QACA;IACF,GAAG;QAAC;KAAO;IAEX,IAAI,SAAS;QACX,qBAAO,8OAAC;sBAAE;;;;;kBAAkB,oCAAoC;IAClE;IAEA,IAAI,CAAC,MAAM;QACT,OAAO,MAAM,qDAAqD;IACpE;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAM,WAAU;;kCACf,8OAAC;wBACC,KAAK,KAAK,aAAa,EAAE,cAAc;wBACvC,KAAI;wBACJ,WAAU;;;;;;kCAEZ,8OAAC;wBAAG,WAAU;kCAAY,KAAK,aAAa,EAAE,aAAa;;;;;;kCAE3D,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAO,WAAU;0CAAU;;;;;;0CAC5B,8OAAC;gCAAO,WAAU;0CAAU;;;;;;0CAC5B,8OAAC;gCAAO,WAAU;0CAAU;;;;;;0CAC5B,8OAAC;gCAAO,WAAU;0CAAU;;;;;;0CAC5B,8OAAC;gCAAO,WAAU;0CAAU;;;;;;;;;;;;kCAG9B,8OAAC;wBACC,SAAS;4BACP,MAAM,4HAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,OAAO;4BAC3B,OAAO,IAAI,CAAC;wBACd;wBACA,WAAU;kCACX;;;;;;;;;;;;0BAMH,8OAAC;gBAAK,WAAU;;kCACd,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;kCAAE;;;;;;;;;;;;;;;;;;AAIX","debugId":null}}]
}