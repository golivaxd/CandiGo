{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Goliva/Desktop/CandiGo/fronted/src/lib/supabaseClient.ts"],"sourcesContent":["'use client';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { useEffect } from 'react';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseKey, {\r\n  auth: {\r\n    persistSession: true,\r\n    autoRefreshToken: true,\r\n    detectSessionInUrl: true,\r\n  },\r\n});\r\n\r\nexport function useAuth(onAuth: (session: any) => void) {\r\n  useEffect(() => {\r\n    const { data: subscription } = supabase.auth.onAuthStateChange(\r\n      async (event, session) => {\r\n        if (event === 'SIGNED_IN') {\r\n          onAuth(session);\r\n        } else if (event === 'SIGNED_OUT') {\r\n          onAuth(null);\r\n        }\r\n      }\r\n    );\r\n\r\n    return () => subscription?.subscription?.unsubscribe();\r\n  }, [onAuth]);\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;AAIA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa,aAAa;IAC7D,MAAM;QACJ,gBAAgB;QAChB,kBAAkB;QAClB,oBAAoB;IACtB;AACF;AAEO,SAAS,QAAQ,MAA8B;IACpD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,EAAE,MAAM,YAAY,EAAE,GAAG,SAAS,IAAI,CAAC,iBAAiB,CAC5D,OAAO,OAAO;YACZ,IAAI,UAAU,aAAa;gBACzB,OAAO;YACT,OAAO,IAAI,UAAU,cAAc;gBACjC,OAAO;YACT;QACF;QAGF,OAAO,IAAM,cAAc,cAAc;IAC3C,GAAG;QAAC;KAAO;AACb","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Goliva/Desktop/CandiGo/fronted/src/app/foro/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { supabase } from '@/lib/supabaseClient';\r\nimport styles from './Debates.module.css';\r\n\r\ninterface Debate {\r\n  id: number;\r\n  title: string;\r\n  author: string;\r\n  created_at: string;\r\n  description: string;\r\n}\r\n\r\ninterface Comentario {\r\n  id: number;\r\n  debate_id: number;\r\n  autor: string;\r\n  contenido: string;\r\n  created_at: string;\r\n  user_id: string;\r\n}\r\n\r\nexport default function ForoDebates() {\r\n  const [debates, setDebates] = useState<Debate[]>([]);\r\n  const [selectedDebate, setSelectedDebate] = useState<Debate | null>(null);\r\n  const [comentarios, setComentarios] = useState<Comentario[]>([]);\r\n  const [newComentario, setNewComentario] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Cargar debates\r\n    const fetchDebates = async () => {\r\n      const { data } = await supabase.from('debates').select('*').order('created_at', { ascending: false });\r\n      if (data) setDebates(data);\r\n    };\r\n    fetchDebates();\r\n  }, []);\r\n\r\n  const handleSelectDebate = async (debate: Debate) => {\r\n    setSelectedDebate(debate);\r\n    const { data } = await supabase\r\n      .from('comentarios')\r\n      .select('*')\r\n      .eq('debate_id', debate.id)\r\n      .order('created_at', { ascending: true });\r\n    if (data) setComentarios(data);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {/* HEADER */}\r\n      <header className={styles.header}>\r\n        <h1>Foro de Debates</h1>\r\n        <button onClick={() => (window.location.href = '/dashboard')} className={styles.buttonHeader}>\r\n          Regresar\r\n        </button>\r\n      </header>\r\n\r\n      {/* CONTENIDO */}\r\n      <div className={styles.main}>\r\n        {/* LISTA DE DEBATES */}\r\n        <div className={styles.listaDebates}>\r\n          <div className={styles.nuevoDebate}>\r\n            <button>+ Nuevo Debate</button>\r\n          </div>\r\n          {debates.map((debate) => (\r\n            <div\r\n              key={debate.id}\r\n              className={styles.debateItem}\r\n              onClick={() => handleSelectDebate(debate)}\r\n            >\r\n              <h3>{debate.title}</h3>\r\n              <p>{debate.description}</p>\r\n              <small>\r\n                Por {debate.author} - {new Date(debate.created_at).toLocaleString()}\r\n              </small>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* PANEL DE COMENTARIOS */}\r\n        {selectedDebate && (\r\n          <div className={styles.panelComentarios}>\r\n            <h2>{selectedDebate.title}</h2>\r\n\r\n            <div className={styles.comentariosList}>\r\n              {comentarios.length > 0 ? (\r\n                comentarios.map((c) => (\r\n                  <div key={c.id} className={styles.comentarioItem}>\r\n                    <strong>{c.autor}</strong>\r\n                    <p>{c.contenido}</p>\r\n                    <small>{new Date(c.created_at).toLocaleString()}</small>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <p>No hay comentarios todav√≠a.</p>\r\n              )}\r\n            </div>\r\n\r\n            <textarea\r\n              className={styles.textareaComentario}\r\n              placeholder=\"Escribe tu comentario...\"\r\n              value={newComentario}\r\n              onChange={(e) => setNewComentario(e.target.value)}\r\n              rows={3}\r\n            />\r\n            <button\r\n              className={styles.buttonComentario}\r\n              onClick={async () => {\r\n                if (!newComentario.trim()) return;\r\n                try {\r\n                  const { data, error } = await supabase\r\n                    .from('comentarios')\r\n                    .insert({\r\n                      debate_id: selectedDebate.id,\r\n                      autor: 'Usuario Demo', // reemplaza con tu usuario\r\n                      contenido: newComentario,\r\n                      created_at: new Date().toISOString(),\r\n                      user_id: '0000-0000-0000', // reemplaza con id real\r\n                    })\r\n                    .select()\r\n                    .single();\r\n\r\n                  if (error) throw error;\r\n                  setComentarios((prev) => [...prev, data]);\r\n                  setNewComentario('');\r\n                } catch (err) {\r\n                  console.error('Error al enviar comentario:', err);\r\n                }\r\n              }}\r\n            >\r\n              Enviar comentario\r\n            </button>\r\n\r\n            <button className={styles.buttonCerrar} onClick={() => setSelectedDebate(null)}>\r\n              Cerrar\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* FOOTER */}\r\n      <footer className={styles.footer}>\r\n        <p>Foro de Debates - &copy; 2025</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}