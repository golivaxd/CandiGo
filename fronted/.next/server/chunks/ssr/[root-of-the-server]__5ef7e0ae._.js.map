{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Goliva/Desktop/CandiGo/fronted/src/lib/supabaseServerClient.ts"],"sourcesContent":["// src/lib/supabaseServerClient.ts\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\r\n\r\nif (!supabaseUrl || !supabaseKey) {\r\n  throw new Error('supabaseUrl and supabaseKey are required.');\r\n}\r\n\r\nexport const supabaseServer = createClient(supabaseUrl, supabaseKey);\r\n\r\n"],"names":[],"mappings":"AAAA,kCAAkC;;;;AAClC;;AAEA,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,iBAAiB,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Goliva/Desktop/CandiGo/fronted/src/components/ResultadosChart.tsx"],"sourcesContent":["import { supabaseServer } from '@/lib/supabaseServerClient';\r\nconst { MultinomialNB } = require('ml-classify-text');\r\n\r\nexport async function GET() {\r\n  try {\r\n    // 1️⃣ Traer los votos desde Supabase\r\n    const { data: votos, error } = await supabaseServer\r\n      .from('votos')\r\n      .select('candidato');\r\n\r\n    if (error) throw new Error(error.message);\r\n\r\n    // 2️⃣ Si no hay votos, retornar JSON vacío\r\n    if (!votos || votos.length === 0) {\r\n      return new Response(\r\n        JSON.stringify({ totalVotos: 0, probabilidades: [] }),\r\n        { status: 200, headers: { 'Content-Type': 'application/json' } }\r\n      );\r\n    }\r\n\r\n    // 3️⃣ Preparar datos para Naive Bayes\r\n    const X = votos.map((v: any) => v.candidato); // array de strings\r\n    const y = votos.map((v: any) => v.candidato);\r\n\r\n    const nb = new MultinomialNB();\r\n    nb.train(X, y); // entrenar el clasificador\r\n\r\n    // 4️⃣ Calcular probabilidades para cada candidato\r\n    const candidatosUnicos = Array.from(new Set(y));\r\n    const probabilidades = candidatosUnicos.map((c) => {\r\n      const probs = nb.predictProb(c); // devuelve un array, tomamos el primero\r\n      return { candidato: c, probabilidad: probs[0] };\r\n    });\r\n\r\n    // 5️⃣ Retornar JSON\r\n    return new Response(\r\n      JSON.stringify({ totalVotos: y.length, probabilidades }),\r\n      { status: 200, headers: { 'Content-Type': 'application/json' } }\r\n    );\r\n  } catch (err: any) {\r\n    console.error('Error analizar votos:', err);\r\n    return new Response(\r\n      JSON.stringify({ error: err.message || 'Error desconocido' }),\r\n      { status: 500, headers: { 'Content-Type': 'application/json' } }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,EAAE,aAAa,EAAE;AAEhB,eAAe;IACpB,IAAI;QACF,qCAAqC;QACrC,MAAM,EAAE,MAAM,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM,kIAAA,CAAA,iBAAc,CAChD,IAAI,CAAC,SACL,MAAM,CAAC;QAEV,IAAI,OAAO,MAAM,IAAI,MAAM,MAAM,OAAO;QAExC,2CAA2C;QAC3C,IAAI,CAAC,SAAS,MAAM,MAAM,KAAK,GAAG;YAChC,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;gBAAE,YAAY;gBAAG,gBAAgB,EAAE;YAAC,IACnD;gBAAE,QAAQ;gBAAK,SAAS;oBAAE,gBAAgB;gBAAmB;YAAE;QAEnE;QAEA,sCAAsC;QACtC,MAAM,IAAI,MAAM,GAAG,CAAC,CAAC,IAAW,EAAE,SAAS,GAAG,mBAAmB;QACjE,MAAM,IAAI,MAAM,GAAG,CAAC,CAAC,IAAW,EAAE,SAAS;QAE3C,MAAM,KAAK,IAAI;QACf,GAAG,KAAK,CAAC,GAAG,IAAI,2BAA2B;QAE3C,kDAAkD;QAClD,MAAM,mBAAmB,MAAM,IAAI,CAAC,IAAI,IAAI;QAC5C,MAAM,iBAAiB,iBAAiB,GAAG,CAAC,CAAC;YAC3C,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,wCAAwC;YACzE,OAAO;gBAAE,WAAW;gBAAG,cAAc,KAAK,CAAC,EAAE;YAAC;QAChD;QAEA,oBAAoB;QACpB,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;YAAE,YAAY,EAAE,MAAM;YAAE;QAAe,IACtD;YAAE,QAAQ;YAAK,SAAS;gBAAE,gBAAgB;YAAmB;QAAE;IAEnE,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;YAAE,OAAO,IAAI,OAAO,IAAI;QAAoB,IAC3D;YAAE,QAAQ;YAAK,SAAS;gBAAE,gBAAgB;YAAmB;QAAE;IAEnE;AACF","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Goliva/Desktop/CandiGo/fronted/src/app/votaciones/page.tsx"],"sourcesContent":["'use client';\r\nimport { useState } from 'react';\r\nimport ResultadosChart from '../../components/ResultadosChart';\r\n\r\n\r\nexport default function VotacionesPage() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [result, setResult] = useState<any>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const analizarVotos = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const res = await fetch('/api/votos/analizar');\r\n      if (!res.ok) throw new Error('Error al analizar votos');\r\n\r\n      const data = await res.json();\r\n      console.log('Datos recibidos del endpoint:', data); // log de depuración\r\n\r\n      setResult(data);\r\n    } catch (err: any) {\r\n      setError(err.message || 'Error desconocido');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '1rem', maxWidth: '900px', margin: '0 auto' }}>\r\n      <h1 style={{ textAlign: 'center', marginBottom: '1rem' }}>Votaciones</h1>\r\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n        <button\r\n          onClick={analizarVotos}\r\n          disabled={loading}\r\n          style={{\r\n            padding: '0.5rem 1rem',\r\n            backgroundColor: '#665780',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '0.3rem',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          {loading ? 'Analizando...' : 'Analizar votos'}\r\n        </button>\r\n      </div>\r\n\r\n      {error && <p style={{ color: 'red', textAlign: 'center' }}>{error}</p>}\r\n\r\n      {result && (\r\n        <>\r\n          <p style={{ textAlign: 'center' }}>Total votos: {result.totalVotos}</p>\r\n\r\n          <h2 style={{ marginTop: '2rem' }}>Tabla de probabilidades</h2>\r\n          <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ border: '1px solid #ccc', padding: '0.5rem' }}>Candidato</th>\r\n                <th style={{ border: '1px solid #ccc', padding: '0.5rem' }}>% Probabilidad</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {result.probabilidades.map((p: any, idx: number) => (\r\n                <tr key={idx}>\r\n                  <td style={{ border: '1px solid #ccc', padding: '0.5rem' }}>{p.candidato}</td>\r\n                  <td style={{ border: '1px solid #ccc', padding: '0.5rem' }}>\r\n                    {(p.probabilidad * 100).toFixed(2)}%\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <div style={{ marginTop: '2rem' }}>\r\n            <ResultadosChart\r\n              labels={result.probabilidades.map((p: any) => p.candidato)}\r\n              data={result.probabilidades.map((p: any) => (p.probabilidad * 100).toFixed(2))}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAKe,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAO;IAC1C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,gBAAgB;QACpB,WAAW;QACX,SAAS;QACT,IAAI;YACF,MAAM,MAAM,MAAM,MAAM;YACxB,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;YAE7B,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,QAAQ,GAAG,CAAC,iCAAiC,OAAO,oBAAoB;YAExE,UAAU;QACZ,EAAE,OAAO,KAAU;YACjB,SAAS,IAAI,OAAO,IAAI;QAC1B,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,8OAAC;QAAI,OAAO;YAAE,SAAS;YAAQ,UAAU;YAAS,QAAQ;QAAS;;0BACjE,8OAAC;gBAAG,OAAO;oBAAE,WAAW;oBAAU,cAAc;gBAAO;0BAAG;;;;;;0BAC1D,8OAAC;gBAAI,OAAO;oBAAE,WAAW;oBAAU,cAAc;gBAAO;0BACtD,cAAA,8OAAC;oBACC,SAAS;oBACT,UAAU;oBACV,OAAO;wBACL,SAAS;wBACT,iBAAiB;wBACjB,OAAO;wBACP,QAAQ;wBACR,cAAc;wBACd,QAAQ;oBACV;8BAEC,UAAU,kBAAkB;;;;;;;;;;;YAIhC,uBAAS,8OAAC;gBAAE,OAAO;oBAAE,OAAO;oBAAO,WAAW;gBAAS;0BAAI;;;;;;YAE3D,wBACC;;kCACE,8OAAC;wBAAE,OAAO;4BAAE,WAAW;wBAAS;;4BAAG;4BAAc,OAAO,UAAU;;;;;;;kCAElE,8OAAC;wBAAG,OAAO;4BAAE,WAAW;wBAAO;kCAAG;;;;;;kCAClC,8OAAC;wBAAM,OAAO;4BAAE,OAAO;4BAAQ,gBAAgB;wBAAW;;0CACxD,8OAAC;0CACC,cAAA,8OAAC;;sDACC,8OAAC;4CAAG,OAAO;gDAAE,QAAQ;gDAAkB,SAAS;4CAAS;sDAAG;;;;;;sDAC5D,8OAAC;4CAAG,OAAO;gDAAE,QAAQ;gDAAkB,SAAS;4CAAS;sDAAG;;;;;;;;;;;;;;;;;0CAGhE,8OAAC;0CACE,OAAO,cAAc,CAAC,GAAG,CAAC,CAAC,GAAQ,oBAClC,8OAAC;;0DACC,8OAAC;gDAAG,OAAO;oDAAE,QAAQ;oDAAkB,SAAS;gDAAS;0DAAI,EAAE,SAAS;;;;;;0DACxE,8OAAC;gDAAG,OAAO;oDAAE,QAAQ;oDAAkB,SAAS;gDAAS;;oDACtD,CAAC,EAAE,YAAY,GAAG,GAAG,EAAE,OAAO,CAAC;oDAAG;;;;;;;;uCAH9B;;;;;;;;;;;;;;;;kCAUf,8OAAC;wBAAI,OAAO;4BAAE,WAAW;wBAAO;kCAC9B,cAAA,8OAAC,qIAAA,CAAA,UAAe;4BACd,QAAQ,OAAO,cAAc,CAAC,GAAG,CAAC,CAAC,IAAW,EAAE,SAAS;4BACzD,MAAM,OAAO,cAAc,CAAC,GAAG,CAAC,CAAC,IAAW,CAAC,EAAE,YAAY,GAAG,GAAG,EAAE,OAAO,CAAC;;;;;;;;;;;;;;;;;;;AAOzF","debugId":null}}]
}