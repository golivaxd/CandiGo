{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Goliva/Desktop/CandiGo/fronted/src/lib/supabaseServerClient.ts"],"sourcesContent":["// src/lib/supabaseServerClient.ts\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\r\n\r\nif (!supabaseUrl || !supabaseKey) {\r\n  throw new Error('supabaseUrl and supabaseKey are required.');\r\n}\r\n\r\nexport const supabaseServer = createClient(supabaseUrl, supabaseKey);\r\n\r\n"],"names":[],"mappings":"AAAA,kCAAkC;;;;AAClC;;AAEA,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,iBAAiB,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/mapa/candidatos.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n});\n"],"names":[],"mappings":"AAAA;AACA"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Goliva/Desktop/CandiGo/fronted/src/app/mapa/page.tsx"],"sourcesContent":["import { supabaseServer as supabase } from '@/lib/supabaseServerClient';\r\nimport styles from \"./candidatos.module.css\";\r\n\r\nexport default async function CargoPage({ params }: { params: { cargo: string } }) {\r\n  const { cargo } = params;\r\n\r\n  // ðŸ”¹ 1. Obtener candidatos filtrados por cargo\r\n  const { data: candidatos, error: errorCandidatos } = await supabase\r\n    .from(\"candidatos\")\r\n    .select(\"*\")\r\n    .eq(\"cargo\", cargo);\r\n\r\n  if (errorCandidatos) {\r\n    console.error(\"Error cargando candidatos:\", errorCandidatos.message);\r\n    return <p>Error cargando candidatos</p>;\r\n  }\r\n\r\n  // ðŸ”¹ 2. Obtener todos los partidos (puedes filtrar solo los necesarios con .in)\r\n  const { data: partidos, error: errorPartidos } = await supabase\r\n    .from(\"partidos\")\r\n    .select(\"*\");\r\n\r\n  if (errorPartidos) {\r\n    console.error(\"Error cargando partidos:\", errorPartidos.message);\r\n    return <p>Error cargando partidos</p>;\r\n  }\r\n\r\n  if (!candidatos || candidatos.length === 0) {\r\n    return <p>No hay candidatos para el cargo \"{cargo}\"</p>;\r\n  }\r\n\r\n  // ðŸ”¹ 3. Hacer un \"join\" manual en JS\r\n  const candidatosConPartido = candidatos.map((cand) => {\r\n    const partido = partidos.find((p) => p.id === cand.partido_id);\r\n    return { ...cand, partido };\r\n  });\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.header}>Candidatos para {cargo}</h1>\r\n      <ul className={styles.lista}>\r\n        {candidatosConPartido.map((candidato) => (\r\n          <li key={candidato.id} className={styles.card}>\r\n            <h2 className={styles.nombre}>{candidato.nombre}</h2>\r\n            <p><strong>Cargo:</strong> {candidato.cargo}</p>\r\n            <p><strong>Entidad:</strong> {candidato.entidad}</p>\r\n            <p><strong>Partido:</strong> {candidato.partido?.nombre || \"Independiente\"}</p>\r\n            {candidato.partido?.coalicion && (\r\n              <p><strong>CoaliciÃ³n:</strong> {candidato.partido.coalicion}</p>\r\n            )}\r\n            {candidato.partido?.pagina_web && (\r\n              <p>\r\n                <a\r\n                  href={candidato.partido.pagina_web}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  PÃ¡gina del partido\r\n                </a>\r\n              </p>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,eAAe,UAAU,EAAE,MAAM,EAAiC;IAC/E,MAAM,EAAE,KAAK,EAAE,GAAG;IAElB,+CAA+C;IAC/C,MAAM,EAAE,MAAM,UAAU,EAAE,OAAO,eAAe,EAAE,GAAG,MAAM,kIAAA,CAAA,iBAAQ,CAChE,IAAI,CAAC,cACL,MAAM,CAAC,KACP,EAAE,CAAC,SAAS;IAEf,IAAI,iBAAiB;QACnB,QAAQ,KAAK,CAAC,8BAA8B,gBAAgB,OAAO;QACnE,qBAAO,8OAAC;sBAAE;;;;;;IACZ;IAEA,gFAAgF;IAChF,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO,aAAa,EAAE,GAAG,MAAM,kIAAA,CAAA,iBAAQ,CAC5D,IAAI,CAAC,YACL,MAAM,CAAC;IAEV,IAAI,eAAe;QACjB,QAAQ,KAAK,CAAC,4BAA4B,cAAc,OAAO;QAC/D,qBAAO,8OAAC;sBAAE;;;;;;IACZ;IAEA,IAAI,CAAC,cAAc,WAAW,MAAM,KAAK,GAAG;QAC1C,qBAAO,8OAAC;;gBAAE;gBAAkC;gBAAM;;;;;;;IACpD;IAEA,qCAAqC;IACrC,MAAM,uBAAuB,WAAW,GAAG,CAAC,CAAC;QAC3C,MAAM,UAAU,SAAS,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,KAAK,UAAU;QAC7D,OAAO;YAAE,GAAG,IAAI;YAAE;QAAQ;IAC5B;IAEA,qBACE,8OAAC;QAAI,WAAW,4IAAA,CAAA,UAAM,CAAC,SAAS;;0BAC9B,8OAAC;gBAAG,WAAW,4IAAA,CAAA,UAAM,CAAC,MAAM;;oBAAE;oBAAiB;;;;;;;0BAC/C,8OAAC;gBAAG,WAAW,4IAAA,CAAA,UAAM,CAAC,KAAK;0BACxB,qBAAqB,GAAG,CAAC,CAAC,0BACzB,8OAAC;wBAAsB,WAAW,4IAAA,CAAA,UAAM,CAAC,IAAI;;0CAC3C,8OAAC;gCAAG,WAAW,4IAAA,CAAA,UAAM,CAAC,MAAM;0CAAG,UAAU,MAAM;;;;;;0CAC/C,8OAAC;;kDAAE,8OAAC;kDAAO;;;;;;oCAAe;oCAAE,UAAU,KAAK;;;;;;;0CAC3C,8OAAC;;kDAAE,8OAAC;kDAAO;;;;;;oCAAiB;oCAAE,UAAU,OAAO;;;;;;;0CAC/C,8OAAC;;kDAAE,8OAAC;kDAAO;;;;;;oCAAiB;oCAAE,UAAU,OAAO,EAAE,UAAU;;;;;;;4BAC1D,UAAU,OAAO,EAAE,2BAClB,8OAAC;;kDAAE,8OAAC;kDAAO;;;;;;oCAAmB;oCAAE,UAAU,OAAO,CAAC,SAAS;;;;;;;4BAE5D,UAAU,OAAO,EAAE,4BAClB,8OAAC;0CACC,cAAA,8OAAC;oCACC,MAAM,UAAU,OAAO,CAAC,UAAU;oCAClC,QAAO;oCACP,KAAI;8CACL;;;;;;;;;;;;uBAdE,UAAU,EAAE;;;;;;;;;;;;;;;;AAwB/B","debugId":null}}]
}