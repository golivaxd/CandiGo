{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Goliva/Desktop/CandiGo/fronted/src/app/calendario/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport '@/app/calendario/calendario.css';\nimport { useRouter } from 'next/navigation';\n\n// Eventos: clave es fecha en formato 'YYYY-MM-DD'\nconst eventos: Record<string, string[]> = {\n  '2025-10-10': ['Reunión con equipo'],\n  '2025-10-15': ['Elecciones federales'],\n  '2025-10-20': ['Conferencias oficiales'],\n};\n\nfunction getISODate(date: Date) {\n  return date.toISOString().slice(0, 10);\n}\n\nexport default function CalendarioPage() {\n  const [value, setValue] = useState<Date | null>(new Date());\n  const router = useRouter();\n\n  // Eventos del día seleccionado\n  const eventosDelDia = value ? eventos[getISODate(value)] : undefined;\n\n  return (\n    <div className=\"calendar-page\">\n      <header className=\"header\">\n        <button className=\"back-button\" onClick={() => router.push('/dashboard')}>\n          Regresar\n        </button>\n        <h1>Calendario</h1>\n        {/* Espacio para alinear contenido, o puedes agregar otro botón */}\n        <div style={{width: \"1.5rem\"}}></div>\n      </header>\n      <main className=\"main\">\n        <Calendar\n          onChange={(val) => setValue(val as Date)}\n          value={value}\n          tileContent={({ date, view }) => {\n            if (view === 'month' && eventos[getISODate(date)]) {\n              return <span style={{ color: '#2563eb', fontSize: '1.2em' }}>•</span>;\n            }\n            return null;\n          }}\n        />\n        <p>Fecha seleccionada: {value ? value.toDateString() : 'No hay fecha seleccionada'}</p>\n        {eventosDelDia && (\n          <div className=\"eventos-dia\">\n            <h3>Eventos:</h3>\n            <ul>\n              {eventosDelDia.map((ev, idx) => (\n                <li key={idx}>{ev}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </main>\n      \n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAGA;AANA;;;;;;;AAQA,kDAAkD;AAClD,MAAM,UAAoC;IACxC,cAAc;QAAC;KAAqB;IACpC,cAAc;QAAC;KAAuB;IACtC,cAAc;QAAC;KAAyB;AAC1C;AAEA,SAAS,WAAW,IAAU;IAC5B,OAAO,KAAK,WAAW,GAAG,KAAK,CAAC,GAAG;AACrC;AAEe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe,IAAI;IACpD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,+BAA+B;IAC/B,MAAM,gBAAgB,QAAQ,OAAO,CAAC,WAAW,OAAO,GAAG;IAE3D,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC;wBAAO,WAAU;wBAAc,SAAS,IAAM,OAAO,IAAI,CAAC;kCAAe;;;;;;kCAG1E,8OAAC;kCAAG;;;;;;kCAEJ,8OAAC;wBAAI,OAAO;4BAAC,OAAO;wBAAQ;;;;;;;;;;;;0BAE9B,8OAAC;gBAAK,WAAU;;kCACd,8OAAC,kKAAA,CAAA,UAAQ;wBACP,UAAU,CAAC,MAAQ,SAAS;wBAC5B,OAAO;wBACP,aAAa,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE;4BAC1B,IAAI,SAAS,WAAW,OAAO,CAAC,WAAW,MAAM,EAAE;gCACjD,qBAAO,8OAAC;oCAAK,OAAO;wCAAE,OAAO;wCAAW,UAAU;oCAAQ;8CAAG;;;;;;4BAC/D;4BACA,OAAO;wBACT;;;;;;kCAEF,8OAAC;;4BAAE;4BAAqB,QAAQ,MAAM,YAAY,KAAK;;;;;;;oBACtD,+BACC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;0CAAG;;;;;;0CACJ,8OAAC;0CACE,cAAc,GAAG,CAAC,CAAC,IAAI,oBACtB,8OAAC;kDAAc;uCAAN;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASzB","debugId":null}}]
}