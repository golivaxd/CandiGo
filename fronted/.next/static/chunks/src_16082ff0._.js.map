{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Goliva/Desktop/CandiGo/fronted/src/lib/supabaseClient.ts"],"sourcesContent":["// src/lib/supabaseClient.ts\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { useEffect } from 'react';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\r\n\r\nif (!supabaseUrl || !supabaseKey) {\r\n  throw new Error('supabaseUrl and supabaseKey are required.');\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseKey, {\r\n  auth: {\r\n    persistSession: true,\r\n    autoRefreshToken: true,\r\n    detectSessionInUrl: true, // üëà s√∫per importante para reset password / magic links\r\n  },\r\n});\r\n\r\n// Hook para escuchar cambios de sesi√≥n\r\nexport function useAuth(onAuth: (session: any) => void) {\r\n  useEffect(() => {\r\n    const { data: subscription } = supabase.auth.onAuthStateChange(\r\n      async (event, session) => {\r\n        if (event === 'SIGNED_IN') {\r\n          onAuth(session);\r\n        } else if (event === 'SIGNED_OUT') {\r\n          onAuth(null);\r\n        }\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      subscription?.subscription?.unsubscribe();\r\n    };\r\n  }, [onAuth]);\r\n}\r\n\r\n// SignUp (ejemplo)\r\nexport const handleSignUp = async (\r\n  e: React.FormEvent,\r\n  email: string,\r\n  password: string\r\n) => {\r\n  e.preventDefault();\r\n  try {\r\n    const { data, error } = await supabase.auth.signUp({\r\n      email,\r\n      password,\r\n    });\r\n    if (error) {\r\n      console.error('Error al registrarse:', error);\r\n    } else {\r\n      console.log('Registro exitoso:', data);\r\n    }\r\n  } catch (err) {\r\n    console.error('Error inesperado:', err);\r\n  }\r\n};\r\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;;AAIR;AAHpB;AACA;;;;AAEA,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa,aAAa;IAC7D,MAAM;QACJ,gBAAgB;QAChB,kBAAkB;QAClB,oBAAoB;IACtB;AACF;AAGO,SAAS,QAAQ,MAA8B;;IACpD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6BAAE;YACR,MAAM,EAAE,MAAM,YAAY,EAAE,GAAG,SAAS,IAAI,CAAC,iBAAiB;qCAC5D,OAAO,OAAO;oBACZ,IAAI,UAAU,aAAa;wBACzB,OAAO;oBACT,OAAO,IAAI,UAAU,cAAc;wBACjC,OAAO;oBACT;gBACF;;YAGF;qCAAO;wBACL;oBAAA,yBAAA,oCAAA,6BAAA,aAAc,YAAY,cAA1B,iDAAA,2BAA4B,WAAW;gBACzC;;QACF;4BAAG;QAAC;KAAO;AACb;GAhBgB;AAmBT,MAAM,eAAe,OAC1B,GACA,OACA;IAEA,EAAE,cAAc;IAChB,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,MAAM,CAAC;YACjD;YACA;QACF;QACA,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,yBAAyB;QACzC,OAAO;YACL,QAAQ,GAAG,CAAC,qBAAqB;QACnC;IACF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,qBAAqB;IACrC;AACF","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Goliva/Desktop/CandiGo/fronted/src/app/reset-password/page.tsx"],"sourcesContent":["'use client';\r\nimport { Suspense, useEffect, useMemo, useState } from 'react';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\nimport { supabase } from '@/lib/supabaseClient';\r\nimport './reset.css';\r\n\r\nfunction ResetPasswordForm() {\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n\r\n  const [password, setPassword] = useState('');\r\n  const [confirm, setConfirm] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [sessionReady, setSessionReady] = useState(false);\r\n\r\n  // Parseamos tambi√©n el hash (#access_token=...&refresh_token=...&type=recovery)\r\n  const parsed = useMemo(() => {\r\n    const hash = typeof window !== 'undefined' ? window.location.hash : '';\r\n    const hashParams = new URLSearchParams(hash.startsWith('#') ? hash.slice(1) : hash);\r\n\r\n    const out = {\r\n      code: searchParams.get('code') || hashParams.get('code'),\r\n      type: searchParams.get('type') || hashParams.get('type'),\r\n      access_token: searchParams.get('access_token') || hashParams.get('access_token'),\r\n      refresh_token: searchParams.get('refresh_token') || hashParams.get('refresh_token'),\r\n    };\r\n    return out;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchParams]);\r\n\r\n  // Establecer sesi√≥n desde la URL (hash o code)\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        // 1) Proveedor que retorna `code` (PKCE)\r\n        if (parsed.code) {\r\n          await supabase.auth.exchangeCodeForSession(window.location.href);\r\n          setSessionReady(true);\r\n          return;\r\n        }\r\n\r\n        // 2) Flujo t√≠pico de recuperaci√≥n de Supabase: access + refresh en hash\r\n        if (parsed.access_token && parsed.refresh_token) {\r\n          const { error } = await supabase.auth.setSession({\r\n            access_token: parsed.access_token,\r\n            refresh_token: parsed.refresh_token,\r\n          });\r\n          if (error) throw error;\r\n          setSessionReady(true);\r\n          return;\r\n        }\r\n\r\n        // 3) Si el cliente ya detect√≥ la sesi√≥n autom√°ticamente\r\n        const { data } = await supabase.auth.getSession();\r\n        if (data.session) {\r\n          setSessionReady(true);\r\n          return;\r\n        }\r\n\r\n        // Si no hay nada, avisamos\r\n        setMessage('‚ùå Token inv√°lido o expirado.');\r\n      } catch (err: any) {\r\n        setMessage(`‚ùå ${err.message || 'No se pudo validar el enlace.'}`);\r\n      }\r\n    })();\r\n  }, [parsed]);\r\n\r\n  const handleReset = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!sessionReady) {\r\n      setMessage('‚ùå A√∫n no se ha validado el enlace. Refresca la p√°gina o solicita otro correo.');\r\n      return;\r\n    }\r\n    if (password !== confirm) {\r\n      setMessage('‚ö†Ô∏è Las contrase√±as no coinciden.');\r\n      return;\r\n    }\r\n    setIsSubmitting(true);\r\n    const { error } = await supabase.auth.updateUser({ password });\r\n    if (error) setMessage('Error: ' + error.message);\r\n    else {\r\n      setMessage('‚úÖ Contrase√±a actualizada con √©xito. Redirigiendo...');\r\n      setTimeout(() => router.push('/'), 1800);\r\n    }\r\n    setIsSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"reset-container\">\r\n      <h2 className=\"reset-heading\">Restablecer Contrase√±a</h2>\r\n\r\n      <form onSubmit={handleReset} className=\"reset-form\">\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Nueva contrase√±a\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n          className=\"input\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirmar contrase√±a\"\r\n          value={confirm}\r\n          onChange={(e) => setConfirm(e.target.value)}\r\n          required\r\n          className=\"input\"\r\n        />\r\n        <button type=\"submit\" className=\"reset-button\" disabled={isSubmitting}>\r\n          {isSubmitting ? 'Guardando...' : 'Actualizar contrase√±a'}\r\n        </button>\r\n      </form>\r\n\r\n      {message && <p className=\"reset-message\">{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function ResetPasswordPage() {\r\n  return (\r\n    <Suspense fallback={<p style={{textAlign:'center'}}>Cargando‚Ä¶</p>}>\r\n      <ResetPasswordForm />\r\n    </Suspense>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}